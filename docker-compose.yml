services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 3s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ./backend
    command: gunicorn JobTracker.wsgi:application --bind 0.0.0.0:8000
    working_dir: /code
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import sys, urllib.request; sys.exit(0) if urllib.request.urlopen('http://localhost:8000/api/healthz/').getcode() == 200 else sys.exit(1)\""]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_URL: "/api"
    ports:
      - "80:80"
    depends_on:
      web:
        condition: service_healthy


#  jenkins:
#    build:
#      context: .
#      dockerfile: jenkins.Dockerfile
#    user: root
#    ports:
#      - "8080:8080"
#      - "50000:50000"
#    volumes:
#        - ./jenkins_home:/var/jenkins_home
#        - /var/run/docker.sock:/var/run/docker.sock
volumes:
  pgdata:
  jenkins_home: